<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.bugcoder.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="xyz.bugcoder.bean.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="orderCode" property="orderCode" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="post" property="post" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="userMessage" property="userMessage" jdbcType="VARCHAR" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="payDate" property="payDate" jdbcType="TIMESTAMP" />
    <result column="deliveryDate" property="deliveryDate" jdbcType="TIMESTAMP" />
    <result column="confirmDate" property="confirmDate" jdbcType="TIMESTAMP" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, orderCode, address, post, receiver, mobile, userMessage, createDate, payDate, 
    deliveryDate, confirmDate, uid, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xyz.bugcoder.bean.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.bugcoder.bean.OrderExample" >
    delete from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.bugcoder.bean.Order" useGeneratedKeys="true" keyProperty="id" >
    insert into order_ (orderCode, address, post, 
      receiver, mobile, userMessage, 
      createDate, payDate, deliveryDate, 
      confirmDate, uid, status
      )
    values (#{orderCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{post,jdbcType=VARCHAR}, 
      #{receiver,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{userMessage,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{payDate,jdbcType=TIMESTAMP}, #{deliveryDate,jdbcType=TIMESTAMP}, 
      #{confirmDate,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.bugcoder.bean.Order" useGeneratedKeys="true" keyProperty="id" >
    insert into order_
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderCode != null" >
        orderCode,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="post != null" >
        post,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="userMessage != null" >
        userMessage,
      </if>
      <if test="createDate != null" >
        createDate,
      </if>
      <if test="payDate != null" >
        payDate,
      </if>
      <if test="deliveryDate != null" >
        deliveryDate,
      </if>
      <if test="confirmDate != null" >
        confirmDate,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderCode != null" >
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="post != null" >
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userMessage != null" >
        #{userMessage,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payDate != null" >
        #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryDate != null" >
        #{deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmDate != null" >
        #{confirmDate,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.bugcoder.bean.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null" >
        orderCode = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.post != null" >
        post = #{record.post,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userMessage != null" >
        userMessage = #{record.userMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payDate != null" >
        payDate = #{record.payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliveryDate != null" >
        deliveryDate = #{record.deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.confirmDate != null" >
        confirmDate = #{record.confirmDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_
    set id = #{record.id,jdbcType=INTEGER},
      orderCode = #{record.orderCode,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      post = #{record.post,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      userMessage = #{record.userMessage,jdbcType=VARCHAR},
      createDate = #{record.createDate,jdbcType=TIMESTAMP},
      payDate = #{record.payDate,jdbcType=TIMESTAMP},
      deliveryDate = #{record.deliveryDate,jdbcType=TIMESTAMP},
      confirmDate = #{record.confirmDate,jdbcType=TIMESTAMP},
      uid = #{record.uid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.bugcoder.bean.Order" >
    update order_
    <set >
      <if test="orderCode != null" >
        orderCode = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="post != null" >
        post = #{post,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userMessage != null" >
        userMessage = #{userMessage,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payDate != null" >
        payDate = #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryDate != null" >
        deliveryDate = #{deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmDate != null" >
        confirmDate = #{confirmDate,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.bugcoder.bean.Order" >
    update order_
    set orderCode = #{orderCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      post = #{post,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      userMessage = #{userMessage,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      payDate = #{payDate,jdbcType=TIMESTAMP},
      deliveryDate = #{deliveryDate,jdbcType=TIMESTAMP},
      confirmDate = #{confirmDate,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>